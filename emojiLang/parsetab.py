
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE ENDMARKER EQUAL IDENTIFIER LEFT_PAREN MINUS NUMBER PLUS PRINT RIGHT_PAREN STRING TIMESSourceCode : ENDMARKER\n                  | FileContent ENDMARKERFileContent : FileContent Statement\n                   | Statement\n           Statement : Assignment\n                | PrintSomething\n                | ExpressionAssignment : IDENTIFIER EQUAL Expression Expression : Expression PLUS Expression\n                | Expression MINUS Expression\n                | Expression TIMES Expression\n                | Expression DIVIDE ExpressionExpression : NUMBER\n                 | STRING\n                 | IDENTIFIER\n                 | LEFT_PAREN Expression RIGHT_PAREN\n                 Expression : MINUS Expression %prec UMINUS\n    PrintSomething : PRINT LEFT_PAREN Expression RIGHT_PAREN\n    '
    
_lr_action_items = {'ENDMARKER':([0,3,4,5,6,7,8,12,13,15,23,24,25,26,27,28,29,31,32,],[2,14,-4,-5,-6,-7,-15,-13,-14,-3,-15,-17,-9,-10,-11,-12,-8,-16,-18,]),'IDENTIFIER':([0,3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,],[8,8,-4,-5,-6,-7,-15,23,23,-13,-14,-3,23,23,23,23,23,23,-15,-17,-9,-10,-11,-12,-8,-16,-18,]),'PRINT':([0,3,4,5,6,7,8,12,13,15,23,24,25,26,27,28,29,31,32,],[9,9,-4,-5,-6,-7,-15,-13,-14,-3,-15,-17,-9,-10,-11,-12,-8,-16,-18,]),'NUMBER':([0,3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,],[12,12,-4,-5,-6,-7,-15,12,12,-13,-14,-3,12,12,12,12,12,12,-15,-17,-9,-10,-11,-12,-8,-16,-18,]),'STRING':([0,3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,],[13,13,-4,-5,-6,-7,-15,13,13,-13,-14,-3,13,13,13,13,13,13,-15,-17,-9,-10,-11,-12,-8,-16,-18,]),'LEFT_PAREN':([0,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,32,],[10,10,-4,-5,-6,-7,-15,21,10,10,-13,-14,-3,10,10,10,10,10,10,-15,-17,-9,-10,-11,-12,-8,-16,-18,]),'MINUS':([0,3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,],[11,11,-4,-5,-6,17,-15,11,11,-13,-14,-3,11,11,11,11,11,11,17,-15,-17,-9,-10,-11,-12,17,17,-16,-18,]),'$end':([1,2,14,],[0,-1,-2,]),'PLUS':([7,8,12,13,22,23,24,25,26,27,28,29,30,31,],[16,-15,-13,-14,16,-15,-17,-9,-10,-11,-12,16,16,-16,]),'TIMES':([7,8,12,13,22,23,24,25,26,27,28,29,30,31,],[18,-15,-13,-14,18,-15,-17,18,18,-11,-12,18,18,-16,]),'DIVIDE':([7,8,12,13,22,23,24,25,26,27,28,29,30,31,],[19,-15,-13,-14,19,-15,-17,19,19,-11,-12,19,19,-16,]),'EQUAL':([8,],[20,]),'RIGHT_PAREN':([12,13,22,23,24,25,26,27,28,30,31,],[-13,-14,31,-15,-17,-9,-10,-11,-12,32,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SourceCode':([0,],[1,]),'FileContent':([0,],[3,]),'Statement':([0,3,],[4,15,]),'Assignment':([0,3,],[5,5,]),'PrintSomething':([0,3,],[6,6,]),'Expression':([0,3,10,11,16,17,18,19,20,21,],[7,7,22,24,25,26,27,28,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceCode","S'",1,None,None,None),
  ('SourceCode -> ENDMARKER','SourceCode',1,'p_sourcecode','emoji.py',103),
  ('SourceCode -> FileContent ENDMARKER','SourceCode',2,'p_sourcecode','emoji.py',104),
  ('FileContent -> FileContent Statement','FileContent',2,'p_file_content','emoji.py',119),
  ('FileContent -> Statement','FileContent',1,'p_file_content','emoji.py',120),
  ('Statement -> Assignment','Statement',1,'p_statement','emoji.py',133),
  ('Statement -> PrintSomething','Statement',1,'p_statement','emoji.py',134),
  ('Statement -> Expression','Statement',1,'p_statement','emoji.py',135),
  ('Assignment -> IDENTIFIER EQUAL Expression','Assignment',3,'p_assignment','emoji.py',143),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_binary_opeartion','emoji.py',154),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_binary_opeartion','emoji.py',155),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_binary_opeartion','emoji.py',156),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_binary_opeartion','emoji.py',157),
  ('Expression -> NUMBER','Expression',1,'p_expression','emoji.py',172),
  ('Expression -> STRING','Expression',1,'p_expression','emoji.py',173),
  ('Expression -> IDENTIFIER','Expression',1,'p_expression','emoji.py',174),
  ('Expression -> LEFT_PAREN Expression RIGHT_PAREN','Expression',3,'p_expression','emoji.py',175),
  ('Expression -> MINUS Expression','Expression',2,'p_expr_uminus','emoji.py',188),
  ('PrintSomething -> PRINT LEFT_PAREN Expression RIGHT_PAREN','PrintSomething',4,'p_print_something','emoji.py',195),
]
