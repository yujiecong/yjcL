
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE ENDMARKER EQUAL IDENTIFIER IF LEFT_BRACKET LEFT_PAREN MINUS NUMBER PLUS PRINT RIGHT_BRACKET RIGHT_PAREN STRING TIMES WHILESourceCode : ENDMARKER\n                  | FileContent ENDMARKERFileContent : FileContent Statement\n            | StatementStatement : Assignment\n                | PrintSomething\n                | Something_Conditional\n                | ExpressionAssignment : IDENTIFIER EQUAL ExpressionSomething_Conditional : IF Expression  LEFT_BRACKET FileContent RIGHT_BRACKET\n                    | WHILE Expression  LEFT_BRACKET FileContent RIGHT_BRACKET\n                     Expression : Expression PLUS Expression\n                | Expression MINUS Expression\n                | Expression TIMES Expression\n                | Expression DIVIDE ExpressionExpression : NUMBER\n                 | STRING\n                 | IDENTIFIER\n                 | LEFT_PAREN Expression RIGHT_PAREN\n                 Expression : MINUS Expression %prec UMINUS\n    PrintSomething : PRINT LEFT_PAREN Expression RIGHT_PAREN\n    '
    
_lr_action_items = {'ENDMARKER':([0,3,4,5,6,7,8,9,15,16,18,26,29,30,31,32,33,34,36,39,42,43,],[2,17,-4,-5,-6,-7,-8,-18,-16,-17,-3,-18,-20,-12,-13,-14,-15,-9,-19,-21,-10,-11,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,22,23,24,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[9,9,-4,-5,-6,-7,-8,-18,26,26,26,26,-16,-17,-3,26,26,26,26,26,26,-18,-20,-12,-13,-14,-15,-9,-19,9,9,-21,9,9,-10,-11,]),'PRINT':([0,3,4,5,6,7,8,9,15,16,18,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[10,10,-4,-5,-6,-7,-8,-18,-16,-17,-3,-18,-20,-12,-13,-14,-15,-9,-19,10,10,-21,10,10,-10,-11,]),'IF':([0,3,4,5,6,7,8,9,15,16,18,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[12,12,-4,-5,-6,-7,-8,-18,-16,-17,-3,-18,-20,-12,-13,-14,-15,-9,-19,12,12,-21,12,12,-10,-11,]),'WHILE':([0,3,4,5,6,7,8,9,15,16,18,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[13,13,-4,-5,-6,-7,-8,-18,-16,-17,-3,-18,-20,-12,-13,-14,-15,-9,-19,13,13,-21,13,13,-10,-11,]),'NUMBER':([0,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,22,23,24,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[15,15,-4,-5,-6,-7,-8,-18,15,15,15,15,-16,-17,-3,15,15,15,15,15,15,-18,-20,-12,-13,-14,-15,-9,-19,15,15,-21,15,15,-10,-11,]),'STRING':([0,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,22,23,24,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[16,16,-4,-5,-6,-7,-8,-18,16,16,16,16,-16,-17,-3,16,16,16,16,16,16,-18,-20,-12,-13,-14,-15,-9,-19,16,16,-21,16,16,-10,-11,]),'LEFT_PAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,29,30,31,32,33,34,36,37,38,39,40,41,42,43,],[11,11,-4,-5,-6,-7,-8,-18,24,11,11,11,11,-16,-17,-3,11,11,11,11,11,11,-18,-20,-12,-13,-14,-15,-9,-19,11,11,-21,11,11,-10,-11,]),'MINUS':([0,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[14,14,-4,-5,-6,-7,20,-18,14,14,14,14,-16,-17,-3,14,14,14,14,14,14,20,-18,20,20,-20,-12,-13,-14,-15,20,20,-19,14,14,-21,14,14,-10,-11,]),'$end':([1,2,17,],[0,-1,-2,]),'RIGHT_BRACKET':([4,5,6,7,8,9,15,16,18,26,29,30,31,32,33,34,36,39,40,41,42,43,],[-4,-5,-6,-7,-8,-18,-16,-17,-3,-18,-20,-12,-13,-14,-15,-9,-19,-21,42,43,-10,-11,]),'PLUS':([8,9,15,16,25,26,27,28,29,30,31,32,33,34,35,36,],[19,-18,-16,-17,19,-18,19,19,-20,-12,-13,-14,-15,19,19,-19,]),'TIMES':([8,9,15,16,25,26,27,28,29,30,31,32,33,34,35,36,],[21,-18,-16,-17,21,-18,21,21,-20,21,21,-14,-15,21,21,-19,]),'DIVIDE':([8,9,15,16,25,26,27,28,29,30,31,32,33,34,35,36,],[22,-18,-16,-17,22,-18,22,22,-20,22,22,-14,-15,22,22,-19,]),'EQUAL':([9,],[23,]),'RIGHT_PAREN':([15,16,25,26,29,30,31,32,33,35,36,],[-16,-17,36,-18,-20,-12,-13,-14,-15,39,-19,]),'LEFT_BRACKET':([15,16,26,27,28,29,30,31,32,33,36,],[-16,-17,-18,37,38,-20,-12,-13,-14,-15,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SourceCode':([0,],[1,]),'FileContent':([0,37,38,],[3,40,41,]),'Statement':([0,3,37,38,40,41,],[4,18,4,4,18,18,]),'Assignment':([0,3,37,38,40,41,],[5,5,5,5,5,5,]),'PrintSomething':([0,3,37,38,40,41,],[6,6,6,6,6,6,]),'Something_Conditional':([0,3,37,38,40,41,],[7,7,7,7,7,7,]),'Expression':([0,3,11,12,13,14,19,20,21,22,23,24,37,38,40,41,],[8,8,25,27,28,29,30,31,32,33,34,35,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceCode","S'",1,None,None,None),
  ('SourceCode -> ENDMARKER','SourceCode',1,'p_sourcecode','Parser_yjcL.py',11),
  ('SourceCode -> FileContent ENDMARKER','SourceCode',2,'p_sourcecode','Parser_yjcL.py',12),
  ('FileContent -> FileContent Statement','FileContent',2,'p_FileContent','Parser_yjcL.py',26),
  ('FileContent -> Statement','FileContent',1,'p_FileContent','Parser_yjcL.py',27),
  ('Statement -> Assignment','Statement',1,'p_statement','Parser_yjcL.py',38),
  ('Statement -> PrintSomething','Statement',1,'p_statement','Parser_yjcL.py',39),
  ('Statement -> Something_Conditional','Statement',1,'p_statement','Parser_yjcL.py',40),
  ('Statement -> Expression','Statement',1,'p_statement','Parser_yjcL.py',41),
  ('Assignment -> IDENTIFIER EQUAL Expression','Assignment',3,'p_assignment','Parser_yjcL.py',48),
  ('Something_Conditional -> IF Expression LEFT_BRACKET FileContent RIGHT_BRACKET','Something_Conditional',5,'p_conditional_expression','Parser_yjcL.py',57),
  ('Something_Conditional -> WHILE Expression LEFT_BRACKET FileContent RIGHT_BRACKET','Something_Conditional',5,'p_conditional_expression','Parser_yjcL.py',58),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_binary_opeartion','Parser_yjcL.py',72),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_binary_opeartion','Parser_yjcL.py',73),
  ('Expression -> Expression TIMES Expression','Expression',3,'p_binary_opeartion','Parser_yjcL.py',74),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_binary_opeartion','Parser_yjcL.py',75),
  ('Expression -> NUMBER','Expression',1,'p_expression','Parser_yjcL.py',90),
  ('Expression -> STRING','Expression',1,'p_expression','Parser_yjcL.py',91),
  ('Expression -> IDENTIFIER','Expression',1,'p_expression','Parser_yjcL.py',92),
  ('Expression -> LEFT_PAREN Expression RIGHT_PAREN','Expression',3,'p_expression','Parser_yjcL.py',93),
  ('Expression -> MINUS Expression','Expression',2,'p_expr_uminus','Parser_yjcL.py',106),
  ('PrintSomething -> PRINT LEFT_PAREN Expression RIGHT_PAREN','PrintSomething',4,'p_print_Identifier','Parser_yjcL.py',113),
]
